CREATE OR REPLACE FUNCTION comparar_items() RETURNS TRIGGER AS $comparar_items$
	DECLARE
		existe record;
		varobservaciones text := '';
		tabla_actual text;
		otra_tabla text;
		urlpbb text;
		urlpwalmart text;
		datos_otra_tablai text := '';
		calificacion_televisor real;
		Marcao text := '';
		precioo real;
		TAMANOPANTALLAO text := '';
		RESOLUCIONO text := '';
		tipodisplayo text := '';
		consulto text:= '';
		Marcag text := '';
		preciog real;
		TAMANOPANTALLAg text := '';
		RESOLUCIONg text := '';
		tipodisplayg text := '';
	
	BEGIN
		SELECT * into existe from televisor where modelo = NEW.modelo;
		IF (existe.modelo is NOT null) THEN

			IF (TG_TABLE_NAME = 'televisorbb') THEN
				tabla_actual := 'www.bestbuy.com';
				urlpbb := NEW.urlbb;
				otra_tabla :=  'www.walmart.com';
				urlpwalmart := existe.urlwalmart;
				consulto := existe.marca||existe.precio||existe.TAMANOPANTALLA||existe.resolucion||existe.tipodisplay;
			ELSE
				tabla_actual := 'Walmart';
				urlpwalmart := NEW.urlwalmart;
				otra_tabla :=  'Best buy';
				urlpbb := existe.urlbb;
				consulto := existe.datos_otra_tabla;
			END IF;
		
			IF (consulto <> (NEW.marca||NEW.precio||NEW.TAMANOPANTALLA||NEW.RESOLUCION||NEW.tipodisplay)) THEN 
				RAISE NOTICE 'Entro por lo que son diferentes';  
				
				
				Marcao = existe.marca;
				precioo = existe.precio;
				TAMANOPANTALLAO = existe.TAMANOPANTALLA;
				RESOLUCIONO = existe.RESOLUCION;
				tipodisplayo = existe.tipodisplay;
				Marcag = existe.marca;
				preciog = existe.precio;
				TAMANOPANTALLAg = existe.TAMANOPANTALLA;
				RESOLUCIONg = existe.RESOLUCION;
				tipodisplayg = existe.tipodisplay;
				

				IF  (existe.marca = ' ' OR existe.marca = '0') THEN
					RAISE NOTICE 'marca vacia';  
					varobservaciones := varobservaciones || 'Único valor de característica para marca,valor faltante en ' || otra_tabla || '\n';
					Marcao = NEW.marca;
					Marcag = NEW.marca;
				ELSIF  (NEW.marca = '0' OR NEW.marca = ' ') THEN
					varobservaciones := varobservaciones || 'Único valor de característica para tamañoPantalla,valor faltante en ' || tabla_actual || '\n';
					Marcao = existe.marca;
					Marcag = existe.marca;
				ELSIF (existe.marca <> NEW.marca) THEN
					RAISE NOTICE 'marca diferente';  
					varobservaciones := varobservaciones || 'Diferencia de valor encontrado para marca. Se selecciona el valor: ' || existe.marca || '. Posibles valores: ' || existe.marca || ' en ' || otra_tabla || ' y ' || NEW.marca || ' en ' || tabla_actual ||'\n';
					Marcao = NEW.marca;
				
				END IF;


				IF (existe.precio = 0) THEN
				RAISE NOTICE 'precio vacio';  
					varobservaciones := varobservaciones || 'Único valor de característica para precio,valor faltante en ' || otra_tabla || '\n';
					precioo = NEW.precio;
					preciog = NEW.precio;
				ELSIF ( NEW.precio = 0) THEN
					varobservaciones := varobservaciones || 'Único valor de característica para tamañoPantalla,valor faltante en ' || tabla_actual || '\n';
					precioo = existe.precio;
					preciog = existe.precio;
				ELSIF (existe.precio <> NEW.precio) THEN
					RAISE NOTICE 'precio diferente';  
					varobservaciones := varobservaciones || 'Diferencia de valor encontrado para precio. Se selecciona el valor: ' || existe.precio || '. Posibles valores: ' || existe.precio || ' en ' || otra_tabla || ' y ' || NEW.precio || ' en ' || tabla_actual || '\n';
					precioo = NEW.precio;
				END IF;

				IF  (new.TAMANOPANTALLA = '0' OR NEW.TAMANOPANTALLA = ' ') THEN
					RAISE NOTICE 'TAMANOPANTALLA vacio';  
					varobservaciones := varobservaciones || 'Único valor de característica para tamañoPantalla,valor faltante en ' || tabla_actual || '\n';
					TAMANOPANTALLAO = existe.TAMANOPANTALLA;
					TAMANOPANTALLAg = existe.TAMANOPANTALLA;
				ELSIF (existe.TAMANOPANTALLA = '0' OR existe.TAMANOPANTALLA = ' ') THEN
					varobservaciones := varobservaciones || 'Único valor de característica para tamañoPantalla,valor faltante en ' || otra_tabla || '\n';
					TAMANOPANTALLAO = NEW.TAMANOPANTALLA;
					TAMANOPANTALLAg = NEW.TAMANOPANTALLA;
				ELSIF (existe.TAMANOPANTALLA <> NEW.TAMANOPANTALLA) THEN
					RAISE NOTICE 'TAMANOPANTALLA diferente';  
					varobservaciones := varobservaciones || 'Diferencia de valor encontrado para tamañoPantalla. Se selecciona el valor: ' || existe.TAMANOPANTALLA || '. Posibles valores: ' || existe.TAMANOPANTALLA || ' en ' || otra_tabla || ' y ' || NEW.TAMANOPANTALLA || ' en ' || tabla_actual || '\n';
					TAMANOPANTALLAO = NEW.TAMANOPANTALLA;
				END IF;
				IF (existe.RESOLUCION = ' ' OR existe.RESOLUCION = '0') THEN
					RAISE NOTICE 'resolucion vacia';  
					varobservaciones := varobservaciones || 'Único valor de característica para resolucion,valor faltante en ' || otra_tabla || '\n';
					RESOLUCIONO = NEW.RESOLUCION;
					RESOLUCIONg = NEW.RESOLUCION;
				ELSIF (NEW.RESOLUCION = '0' OR NEW.RESOLUCION = ' ') THEN
					varobservaciones := varobservaciones || 'Único valor de característica para tamañoPantalla,valor faltante en ' || tabla_actual || '\n';
					RESOLUCIONO = existe.RESOLUCION;
					RESOLUCIONg = existe.RESOLUCION;
				ELSIF (existe.RESOLUCION <> NEW.RESOLUCION) THEN
					RAISE NOTICE 'resolucion diferente';  
					varobservaciones := varobservaciones || 'Diferencia de valor encontrado para resolucion. Se selecciona el valor: ' || existe.RESOLUCION || '. Posibles valores: ' || existe.RESOLUCION || ' en ' || otra_tabla || ' y ' || NEW.RESOLUCION || ' en ' || tabla_actual || '\n';
					RESOLUCIONO = NEW.RESOLUCION;
				
				END IF;
				IF (existe.tipodisplay = ' ' OR existe.tipodisplay = '0') THEN
					RAISE NOTICE 'tipodisplay vacio';  
					varobservaciones := varobservaciones || 'Único valor de característica para tipodisplay,valor faltante en ' || otra_tabla || '\n';
					tipodisplayo = NEW.tipodisplay;
					tipodisplayg = NEW.tipodisplay;
				ELSIF (NEW.tipodisplay = '0' OR NEW.tipodisplay = ' ') THEN
					varobservaciones := varobservaciones || 'Único valor de característica para tamañoPantalla,valor faltante en ' || tabla_actual || '\n';
					tipodisplayo = existe.tipodisplay;
					tipodisplayg = existe.tipodisplay;
				ELSIF (existe.tipodisplay <> NEW.tipodisplay) THEN
					RAISE NOTICE 'tipodisplay diferente';  
					varobservaciones := varobservaciones || 'Diferencia de valor encontrado para tipoDisplay. Se selecciona el valor: ' || existe.tipodisplay|| '. Posibles valores: ' || existe.tipodisplay || ' en ' || otra_tabla || ' y ' || NEW.tipodisplay || ' en ' || tabla_actual || '\n';
					tipodisplayo = NEW.tipodisplay;
				
				END IF;
				datos_otra_tablai = Marcao||precioo||TAMANOPANTALLAO||RESOLUCIONO||tipodisplayo;
				update  televisor set observaciones = existe.observaciones || varobservaciones, marca = Marcag,precio=preciog,TAMANOPANTALLA=TAMANOPANTALLAg,resolucion	= RESOLUCIONg,tipodisplay=tipodisplayg,urlbb = urlpbb, urlwalmart = urlpwalmart,datos_otra_tabla = datos_otra_tablai where modelo = NEW.modelo;
			ELSE
			RAISE NOTICE 'No son diferentes';  
			END IF;

		ELSE
			IF (TG_TABLE_NAME = 'televisorbb') THEN
				urlpbb := NEW.urlbb;
				calificacion_televisor := NEW.calificacionbb;
				urlpwalmart := '';
			ELSE
				urlpwalmart := NEW.urlwalmart;
				calificacion_televisor := NEW.calificacionwalmart;
				urlpbb := '';
			END IF;
			INSERT INTO televisor values(NEW.modelo,'',NEW.marca,NEW.precio,NEW.TAMANOPANTALLA,NEW.RESOLUCION,NEW.tipodisplay,urlpwalmart,urlpbb,calificacion_televisor,true,'');

		END IF;
		RETURN NULL;
	END;

$comparar_items$ LANGUAGE plpgsql;


CREATE TRIGGER comparar_itemsbb AFTER INSERT
	ON televisorbb FOR EACH ROW
	EXECUTE PROCEDURE comparar_items();
	
CREATE TRIGGER comparar_itemswalmart AFTER INSERT
	ON televisorwalmart FOR EACH ROW
	EXECUTE PROCEDURE comparar_items();

CREATE OR REPLACE FUNCTION desactivar_items() RETURNS void AS $desactivar_items$
DECLARE
BEGIN
UPDATE televisor SET activo = false WHERE modelo = (SELECT DISTINCT modelo FROM televisor WHERE modelo NOT IN (SELECT modelo FROM televisorbb) AND modelo NOT IN (SELECT modelo FROM televisorwalmart));
END;
$desactivar_items$ LANGUAGE plpgsql;